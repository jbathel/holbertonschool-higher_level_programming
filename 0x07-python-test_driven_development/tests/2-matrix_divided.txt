The ``matrix_divided`` module
===========================

Using ``matrix_divided``
---------------------

The matrix_divided module supplies one function, matrix_divided().

Import matrix_divided
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Dividing by an integer
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Dividing matrix by a float
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 1.5)
[[0.67, 1.33, 2.0], [2.67, 3.33, 4.0]]

Dividing matrix by 0
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

Dividing matrix by char type
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 'p')
Traceback (most recent call last):
TypeError: div must be a number

Dividing matrix by non int type
>>> matrix_divided([[1, "2", 3], [4, 5, 6]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Dividing by unequal arrays
>>> matrix_divided([[1, 2, 3], [4, 5]], 1)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

Dividing by unequal arrays
>>> matrix_divided([[1, 2], [4, 5, 6]], 1)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

Dividing a tuple
>>> matrix_divided((1, 2, 3), 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Missing one argument
>>> matrix_divided([[1, 2, 3], [4, 5, 6]])
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

Missing both arguments
>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

